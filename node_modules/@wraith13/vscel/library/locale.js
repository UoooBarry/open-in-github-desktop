"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Locale = exports.make = void 0;
const vscode = require("vscode");
exports.make = (basicLocale, locales) => new Locale(basicLocale, locales);
class Locale {
    constructor(basicLocale, locales) {
        var _a;
        this.basicLocale = basicLocale;
        this.locales = locales;
        //type KeyType = keyof typeof localeEn;
        this.localeTableKey = vscode.env.language; // <string>JSON.parse(<string>process.env.VSCODE_NLS_CONFIG).locale;
        this.localeTable = Object.assign(JSON.parse(JSON.stringify(this.basicLocale)), ((_a = this.locales[this.localeTableKey]) !== null && _a !== void 0 ? _a : {}));
        this.isTypealbeLocale = [
            "zh-CN",
            "zh-TW",
            "ja",
            "ko",
        ].indexOf(this.localeTableKey) < 0;
        this.string = (key) => this.localeTable[key] || key;
        this.map = (key) => this.string(key);
        this.typeableMap = (key) => this.isTypealbeLocale ?
            this.string(key) :
            `${this.string(key)} ( ${this.basicLocale[key]} )`;
        this.key = (text) => undefined === text ?
            undefined :
            Object.entries(this.localeTable).filter(i => i[1] === text).map(i => i[0])[0];
        this.showMessage = (target, options, ...items) => __awaiter(this, void 0, void 0, function* () {
            var _b;
            return this.key(yield target((_b = options.message) !== null && _b !== void 0 ? _b : (undefined !== options.map ?
                this.map(options.map) :
                "no message" // 型を壊されてない限りここに到達することない
            ), {
                modal: options.modal
            }, ...items.map(this.map)));
        });
        this.showInformationMessage = (options, ...items) => this.showMessage(vscode.window.showInformationMessage, options, ...items);
        this.showWarningMessage = (options, ...items) => this.showMessage(vscode.window.showWarningMessage, options, ...items);
        this.showErrorMessage = (options, ...items) => this.showMessage(vscode.window.showErrorMessage, options, ...items);
    }
}
exports.Locale = Locale;
//# sourceMappingURL=locale.js.map