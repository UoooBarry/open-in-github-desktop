import * as vscode from 'vscode';
export interface CommandMenuItem extends vscode.QuickPickItem {
    when?: (menus: CommandMenuItem[]) => boolean;
    preview?: () => Promise<unknown>;
    command?: () => Promise<unknown>;
    tags?: string[];
}
export interface QuickPickOptions<CommandMenuItemEx extends CommandMenuItem> extends vscode.QuickPickOptions {
    rollback?: () => Promise<unknown>;
    strictRollback?: () => Promise<unknown>;
    debug?: boolean;
    preview?: boolean;
    command?: (selected: CommandMenuItemEx) => Promise<unknown>;
    onCancel?: () => Promise<unknown>;
}
export declare const showQuickPick: <T extends CommandMenuItem>(items: T[] | Thenable<T[]>, options?: QuickPickOptions<T> | undefined, token?: vscode.CancellationToken | undefined) => Promise<T | undefined>;
export interface InputBoxOptions extends vscode.InputBoxOptions {
    preview?: boolean;
    command?: (input: string) => Promise<unknown>;
    rollback?: () => Promise<unknown>;
    onCancel?: () => Promise<unknown>;
}
export declare const showInputBox: <T extends InputBoxOptions>(options?: T | undefined, token?: vscode.CancellationToken | undefined) => Promise<string | undefined>;
