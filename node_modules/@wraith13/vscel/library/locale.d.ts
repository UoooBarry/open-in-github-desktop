import * as vscode from 'vscode';
export interface LocaleEntry {
    [key: string]: string;
}
export declare const make: <LocaleEntryType extends LocaleEntry>(basicLocale: LocaleEntryType, locales: {
    [language: string]: LocaleEntryType;
}) => Locale<LocaleEntryType>;
export interface ShowMessageOptionsBase {
    modal?: boolean;
}
export interface ShowMessageOptionsRegular extends ShowMessageOptionsBase {
    message: string;
}
export interface ShowMessageOptionsTyped<LocaleEntryType extends LocaleEntry> extends ShowMessageOptionsBase {
    map: keyof LocaleEntryType & string;
}
export declare type ShowMessageOptions<LocaleEntryType extends LocaleEntry> = ShowMessageOptionsRegular | ShowMessageOptionsTyped<LocaleEntryType>;
export declare class Locale<LocaleEntryType extends LocaleEntry> {
    private basicLocale;
    private locales;
    constructor(basicLocale: LocaleEntryType, locales: {
        [language: string]: LocaleEntryType;
    });
    localeTableKey: string;
    localeTable: any;
    isTypealbeLocale: boolean;
    string: (key: string) => string;
    map: (key: keyof LocaleEntryType & string) => string;
    typeableMap: (key: keyof LocaleEntryType & string) => string;
    key: (text: string | undefined) => (keyof LocaleEntryType & string) | undefined;
    showMessage: (target: typeof vscode.window.showInformationMessage | typeof vscode.window.showWarningMessage | typeof vscode.window.showErrorMessage, options: ShowMessageOptions<LocaleEntryType>, ...items: (keyof LocaleEntryType & string)[]) => Promise<(keyof LocaleEntryType & string) | undefined>;
    showInformationMessage: (options: ShowMessageOptions<LocaleEntryType>, ...items: (keyof LocaleEntryType & string)[]) => Promise<(keyof LocaleEntryType & string) | undefined>;
    showWarningMessage: (options: ShowMessageOptions<LocaleEntryType>, ...items: (keyof LocaleEntryType & string)[]) => Promise<(keyof LocaleEntryType & string) | undefined>;
    showErrorMessage: (options: ShowMessageOptions<LocaleEntryType>, ...items: (keyof LocaleEntryType & string)[]) => Promise<(keyof LocaleEntryType & string) | undefined>;
}
